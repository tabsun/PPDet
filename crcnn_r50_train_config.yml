# model
architecture: CascadeRCNN
pretrain_weights: https://paddledet.bj.bcebos.com/models/pretrained/ResNet50_vd_ssld_v2_pretrained.pdparams
#pretrain_weights: pretrained/crcnn_r50_v1.0.pdparams 
weights: ../output/crcnn_r50_syncBN/best_model
norm_type: sync_bn
use_ema: true
ema_decay: 0.9998

CascadeRCNN:
  backbone: ResNet
  neck: FPN
  rpn_head: RPNHead
  bbox_head: CascadeHead
  # post process
  bbox_post_process: BBoxPostProcess

ResNet:
  depth: 50
  variant: d
  norm_type: bn
  freeze_at: 0
  return_idx: [0,1,2,3]
  num_stages: 4
  lr_mult_list: [0.05, 0.05, 0.1, 0.15]

FPN:
  out_channel: 256

RPNHead:
  anchor_generator:
    aspect_ratios: [0.62, 1.0, 1.54]
    anchor_sizes: [[6], [10], [13], [16], [24]]
    #aspect_ratios: [0.5, 1.0, 2.0]
    #anchor_sizes: [[32], [64], [128], [256], [512]]
    strides: [4, 8, 16, 32, 64]
  rpn_target_assign:
    batch_size_per_im: 256
    fg_fraction: 0.5
    negative_overlap: 0.3
    positive_overlap: 0.7
    use_random: True
  train_proposal:
    min_size: 0.0
    nms_thresh: 0.7
    pre_nms_top_n: 2000
    post_nms_top_n: 2000
    topk_after_collect: True
  test_proposal:
    min_size: 0.0
    nms_thresh: 0.7
    pre_nms_top_n: 2000
    post_nms_top_n: 2000


CascadeHead:
  head: CascadeTwoFCHead
  roi_extractor:
    resolution: 7
    sampling_ratio: 0
    aligned: True
  bbox_assigner: BBoxAssigner

BBoxAssigner:
  batch_size_per_im: 512
  bg_thresh: 0.5
  fg_thresh: 0.5
  fg_fraction: 0.25
  cascade_iou: [0.5, 0.6, 0.7]
  use_random: True

CascadeTwoFCHead:
  out_channel: 1024

BBoxPostProcess:
  decode:
    name: RCNNBox
    prior_box_var: [30.0, 30.0, 15.0, 15.0]
  nms:
    name: MultiClassNMS
    keep_top_k: 300
    score_threshold: 0.001
    nms_threshold: 0.1
    softnms_type: 'softnms_G'
    delta: 0.5

# dataset source
metric: COCO
num_classes: 3

TrainDataset:
  !COCODataSet
    image_dir: train
    anno_path: annotations/train.json
    dataset_dir: ../dataset/xd
    data_fields: ['image', 'gt_bbox', 'gt_class', 'gt_poly']

EvalDataset:
  !COCODataSet
    image_dir: val
    anno_path: annotations/val.json
    #anno_path: annotations/image_info_val.json
    dataset_dir: ../dataset/xd
    data_fields: ['image', 'gt_bbox', 'gt_class']
    #data_fields: ['image']

TestDataset:
  !ImageFolder
    image_dir: test
    anno_path: annotations/test.json
    dataset_dir: ../dataset/xd

# data augmentation
worker_num: 2
TrainReader:
  sample_transforms:
  - Decode: {}
  - InstaBoost: {
        anno_file: ../dataset/xd/annotations/train_with_pillar_and_standeye_onlytrain.json,
        image_dir: ../dataset/xd/train,
        seg_dir: ../dataset/xd/train_segs,
        categories: ['rect_eye', 'sphere_eye', 'box_eye'],
        config_params: [
                {'action_candidate': ['normal', 'horizontal', 'skip'],
                 'action_prob': [1, 0, 0],
                 'scale': [0.8, 1.2],
                 'dx': 3.0,
                 'dy': 0.1,
                 'theta': [-1, 1],
                 'color_prob': 0.0,
                 'hflag': False,
                 'use_local': True,
                 'aug_prob': 0.},
                {'action_candidate': ['normal', 'horizontal', 'skip'],
                 'action_prob': [1, 0, 0],
                 'scale': [0.8, 1.2],
                 'dx': 3.0,
                 'dy': 0.1,
                 'theta': [-1, 1],
                 'color_prob': 0.0,
                 'hflag': False,
                 'use_local': True,
                 'aug_prob': 0.},
                {'action_candidate': ['normal', 'horizontal', 'skip'],
                 'action_prob': [0, 0, 1],
                 'scale': [0.8, 1.2],
                 'dx': 3.0,
                 'dy': 0.5,
                 'theta': [-1, 1],
                 'color_prob': 0.0,
                 'hflag': False,
                 'use_local': False,
                 'aug_prob': 0.,
                 'sync_nums': [0, 1, 2],
                 'sync_prob': [0.1, 0.7, 0.2],
                 'stand_eye_prob': 0.}
        ]}
  - RandomResize: {target_size: [[480,3333],[512,3333],[544,3333],[576,3333], [608,3333],[640, 3333],[672,3333], [704,3333], [736,3333]], interp: 2, keep_ratio: True}
    #- RandomResize: {target_size: [[576,3333],[672,3333],[768,3333],[864,3333],[960,3333],[1056,3333],[1152,3333]], interp: 2, keep_ratio: True}
  - RandomFlip: {prob: 0.5}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - Permute: {}
  batch_transforms:
  - PadBatch: {pad_to_stride: 32, pad_gt: true}
  batch_size: 2
  shuffle: true
  drop_last: true

EvalReader:
  sample_transforms:
  - Decode: {}
  - SlidingWindow: {input_size: [1152, 2048], stride: [32, 32], window: [544, 416]}
  - Resize: {target_size: [768, 1280], keep_ratio: True, interp: 2}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - Pad: {fill_value: [0., 0., 0.]}
  - Permute: {}
  batch_transforms:
    - PadBatch: {pad_to_stride: 32, pad_gt: false}
  batch_size: 1
  shuffle: false
  drop_last: false
  drop_empty: false

  #EvalReader:
  #  sample_transforms:
  #  - Decode: {}
  #  - Resize: {interp: 2, target_size: [1152, 3333], keep_ratio: True}
  #    #- Resize: {interp: 2, target_size: [736, 2048], keep_ratio: True}
  #  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  #  - Permute: {}
  #  batch_transforms:
  #  - PadBatch: {pad_to_stride: 32, pad_gt: false}
  #  batch_size: 1
  #  shuffle: false
  #  drop_last: false
  #  drop_empty: false


TestReader:
  sample_transforms:
  - Decode: {}
  - Resize: {interp: 2, target_size: [800, 1333], keep_ratio: True}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - Permute: {}
  batch_transforms:
  - PadBatch: {pad_to_stride: 32, pad_gt: false}
  batch_size: 1
  shuffle: false
  drop_last: false

# runtime setting
use_gpu: true
log_iter: 100
save_dir: output
snapshot_epoch: 1
epoch: 24
LearningRate:
  base_lr: 0.01
  schedulers:
  - !PiecewiseDecay
    gamma: 0.1
    milestones: [12, 22]
  - !LinearWarmup
    start_factor: 0.1
    steps: 1000
# optimizer
OptimizerBuilder:
  optimizer:
    momentum: 0.9
    type: Momentum
  regularizer:
    factor: 0.0001
    type: L2
